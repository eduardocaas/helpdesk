{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/icon\";\nfunction LoginComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getErrorMessage());\n  }\n}\nfunction LoginComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.getErrorMessagePassword());\n  }\n}\nexport class LoginComponent {\n  constructor(toast, service, router) {\n    this.toast = toast;\n    this.service = service;\n    this.router = router;\n    this.hide = true;\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.senha = new FormControl('', [Validators.required, Validators.minLength(3)]);\n    this.creds = {\n      email: '',\n      senha: ''\n    };\n  }\n  ngOnInit() {}\n  logar() {\n    this.service.authenticate(this.creds).subscribe(response => {\n      this.service.successfulLogin(response.headers.get('Authorization').substring(7));\n      this.toast.success('Login efetuado com sucesso', 'Sucesso', {\n        timeOut: 1500\n      });\n      this.router.navigate(['']);\n    }, () => {\n      this.toast.error('Usuário ou senha inválidos');\n    });\n  }\n  validaCampos() {\n    return this.email.valid && this.senha.valid;\n  }\n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'Você deve informar um email';\n    }\n    return this.email.hasError('email') ? 'Email inválido' : '';\n  }\n  getErrorMessagePassword() {\n    if (this.senha.hasError('required')) {\n      return 'Você deve informar uma senha';\n    }\n    return null;\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.ToastrService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 20,\n  vars: 11,\n  consts: [[1, \"container\"], [1, \"form\", \"mat-elevation-z8\"], [\"src\", \"assets/img/login-image.svg\", \"alt\", \"Login Help Desk\"], [\"appearance\", \"fill\", 1, \"full-width\"], [\"name\", \"email\", \"matInput\", \"\", \"placeholder\", \"nome@email.com\", \"required\", \"\", 3, \"ngModel\", \"formControl\", \"ngModelChange\"], [4, \"ngIf\"], [\"name\", \"senha\", \"matInput\", \"\", \"placeholder\", \"Ex. 123\", \"required\", \"\", 3, \"ngModel\", \"type\", \"formControl\", \"ngModelChange\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"id\", \"btnLogar\", \"mat-stroked-button\", \"\", \"color\", \"primary\", 1, \"full-width\", 3, \"disabled\", \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"h1\");\n      i0.ɵɵtext(3, \"Help Desk\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"img\", 2);\n      i0.ɵɵelementStart(5, \"mat-form-field\", 3)(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.creds.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, LoginComponent_mat_error_9_Template, 2, 1, \"mat-error\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"mat-form-field\", 3)(11, \"mat-label\");\n      i0.ɵɵtext(12, \"Senha\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.creds.senha = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, LoginComponent_mat_error_14_Template, 2, 1, \"mat-error\", 5);\n      i0.ɵɵelementStart(15, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_15_listener() {\n        return ctx.hide = !ctx.hide;\n      });\n      i0.ɵɵelementStart(16, \"mat-icon\");\n      i0.ɵɵtext(17);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_18_listener() {\n        return ctx.logar();\n      });\n      i0.ɵɵtext(19, \"Entrar\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.creds.email)(\"formControl\", ctx.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.email.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.creds.senha)(\"type\", ctx.hide ? \"password\" : \"text\")(\"formControl\", ctx.senha);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.senha.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.validaCampos());\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgForm, i5.FormControlDirective, i6.MatFormField, i6.MatLabel, i6.MatError, i6.MatSuffix, i7.MatButton, i7.MatIconButton, i8.MatInput, i9.MatIcon],\n  styles: [\".container[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  height: 100%;\\r\\n  background-color: rgb(71, 123, 218);\\r\\n}\\r\\n\\r\\n.form[_ngcontent-%COMP%] {\\r\\n  width: 30rem;\\r\\n  margin: auto;\\r\\n  padding: 4rem 1rem;\\r\\n  border-radius: .3rem;\\r\\n  background-color: rgb(235, 235, 235);\\r\\n}\\r\\n\\r\\n.full-width[_ngcontent-%COMP%]{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nh1[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nimg[_ngcontent-%COMP%] {\\r\\n  height: 12rem;\\r\\n  width: 100%;\\r\\n  margin: 1.5rem auto 1.5rem auto;\\r\\n}\\r\\n\\r\\nmat-form-field[_ngcontent-%COMP%] {\\r\\n  margin: .5rem 0 .5rem 0;\\r\\n}\\r\\n\\r\\n#btnLogar[_ngcontent-%COMP%] {\\r\\n  margin-top: .5rem;\\r\\n  background-color: rgb(226, 226, 226);\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsWUFBWTtFQUNaLG1DQUFtQztBQUNyQzs7QUFFQTtFQUNFLFlBQVk7RUFDWixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLG9CQUFvQjtFQUNwQixvQ0FBb0M7QUFDdEM7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFdBQVc7RUFDWCwrQkFBK0I7QUFDakM7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsb0NBQW9DO0FBQ3RDIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lcntcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYig3MSwgMTIzLCAyMTgpO1xyXG59XHJcblxyXG4uZm9ybSB7XHJcbiAgd2lkdGg6IDMwcmVtO1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBwYWRkaW5nOiA0cmVtIDFyZW07XHJcbiAgYm9yZGVyLXJhZGl1czogLjNyZW07XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzNSwgMjM1LCAyMzUpO1xyXG59XHJcblxyXG4uZnVsbC13aWR0aHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuaDEge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuaW1nIHtcclxuICBoZWlnaHQ6IDEycmVtO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbjogMS41cmVtIGF1dG8gMS41cmVtIGF1dG87XHJcbn1cclxuXHJcbm1hdC1mb3JtLWZpZWxkIHtcclxuICBtYXJnaW46IC41cmVtIDAgLjVyZW0gMDtcclxufVxyXG5cclxuI2J0bkxvZ2FyIHtcclxuICBtYXJnaW4tdG9wOiAuNXJlbTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjI2LCAyMjYsIDIyNik7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;;;;;;ICMlDC,iCAAiC;IAAAA,YAAqB;IAAAA,iBAAY;;;;IAAjCA,eAAqB;IAArBA,8CAAqB;;;;;IAKtDA,iCAAiC;IAAAA,YAA6B;IAAAA,iBAAY;;;;IAAzCA,eAA6B;IAA7BA,sDAA6B;;;ADApE,OAAM,MAAOC,cAAc;EAWzBC,YAAoBC,KAAoB,EAAUC,OAAoB,EAAUC,MAAc;IAA1E,UAAK,GAALF,KAAK;IAAyB,YAAO,GAAPC,OAAO;IAAuB,WAAM,GAANC,MAAM;IATtF,SAAI,GAAG,IAAI;IACX,UAAK,GAAG,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,KAAK,CAAC,CAAC;IACpE,UAAK,GAAG,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAE3E,UAAK,GAAgB;MACnBD,KAAK,EAAE,EAAE;MACTE,KAAK,EAAE;KACR;EAEiG;EAElGC,QAAQ,IAAW;EAEnBC,KAAK;IACH,IAAI,CAACP,OAAO,CAACQ,YAAY,CAAC,IAAI,CAACC,KAAK,CAAC,CAACC,SAAS,CAACC,QAAQ,IAAG;MACzD,IAAI,CAACX,OAAO,CAACY,eAAe,CAACD,QAAQ,CAACE,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;MAChF,IAAI,CAAChB,KAAK,CAACiB,OAAO,CAAC,4BAA4B,EAAE,SAAS,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE,CAAC;MAC9E,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC,EAAE,MAAK;MACN,IAAI,CAACnB,KAAK,CAACoB,KAAK,CAAC,4BAA4B,CAAC;IAChD,CAAC,CAAC;EACJ;EAEAC,YAAY;IACV,OAAO,IAAI,CAACjB,KAAK,CAACkB,KAAK,IAAI,IAAI,CAAChB,KAAK,CAACgB,KAAK;EAC7C;EAEAC,eAAe;IACb,IAAI,IAAI,CAACnB,KAAK,CAACoB,QAAQ,CAAC,UAAU,CAAC,EAAE;MACnC,OAAO,6BAA6B;;IAGtC,OAAO,IAAI,CAACpB,KAAK,CAACoB,QAAQ,CAAC,OAAO,CAAC,GAAG,gBAAgB,GAAG,EAAE;EAC7D;EAEAC,uBAAuB;IACrB,IAAI,IAAI,CAACnB,KAAK,CAACkB,QAAQ,CAAC,UAAU,CAAC,EAAE;MACnC,OAAO,8BAA8B;;IAEvC,OAAO,IAAI;EACb;;;mBA1CW1B,cAAc;AAAA;;QAAdA,cAAc;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ3BjC,8BAAuB;MAEfA,yBAAS;MAAAA,iBAAK;MAClBA,yBAA4D;MAC5DA,yCAAqD;MACxCA,qBAAK;MAAAA,iBAAY;MAC5BA,gCAAmH;MAA5GA;QAAA;MAAA,EAAyB;MAAhCA,iBAAmH;MACnHA,2EAAkE;MACpEA,iBAAiB;MACjBA,0CAAqD;MACxCA,sBAAK;MAAAA,iBAAY;MAC5BA,iCAAgJ;MAAzIA;QAAA;MAAA,EAAyB;MAAhCA,iBAAgJ;MAChJA,6EAA0E;MAC1EA,kCAC6B;MADKA;QAAA;MAAA,EAAsB;MAEtDA,iCAAU;MAAAA,aAA0C;MAAAA,iBAAW;MAGnEA,kCAA2H;MAArGA;QAAA,OAASkC,WAAO;MAAA,EAAC;MAAoFlC,uBAAM;MAAAA,iBAAS;;;MAZjIA,eAAyB;MAAzBA,yCAAyB;MACpBA,eAAmB;MAAnBA,wCAAmB;MAIxBA,eAAyB;MAAzBA,yCAAyB;MACpBA,eAAmB;MAAnBA,wCAAmB;MAC0BA,eAAmC;MAAnCA,6CAAmC;MAEhFA,eAA0C;MAA1CA,gEAA0C;MAGhBA,eAA4B;MAA5BA,8CAA4B","names":["FormControl","Validators","i0","LoginComponent","constructor","toast","service","router","required","email","minLength","senha","ngOnInit","logar","authenticate","creds","subscribe","response","successfulLogin","headers","get","substring","success","timeOut","navigate","error","validaCampos","valid","getErrorMessage","hasError","getErrorMessagePassword","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Administrador\\Documents\\JAVA\\helpdesk-front\\helpdesk\\src\\app\\components\\login\\login.component.ts","C:\\Users\\Administrador\\Documents\\JAVA\\helpdesk-front\\helpdesk\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Credenciais } from 'src/app/models/credenciais';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  hide = true;\n  email = new FormControl('', [Validators.required, Validators.email]);\n  senha = new FormControl('', [Validators.required, Validators.minLength(3)]);\n\n  creds: Credenciais = {\n    email: '',\n    senha: ''\n  }\n\n  constructor(private toast: ToastrService, private service: AuthService, private router: Router) { }\n\n  ngOnInit(): void { }\n\n  logar() {\n    this.service.authenticate(this.creds).subscribe(response => {\n      this.service.successfulLogin(response.headers.get('Authorization').substring(7));\n      this.toast.success('Login efetuado com sucesso', 'Sucesso', { timeOut: 1500 });\n      this.router.navigate(['']);\n    }, () => {\n      this.toast.error('Usuário ou senha inválidos');\n    });\n  }\n\n  validaCampos(): boolean {\n    return this.email.valid && this.senha.valid;\n  }\n\n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'Você deve informar um email';\n    }\n\n    return this.email.hasError('email') ? 'Email inválido' : '';\n  }\n\n  getErrorMessagePassword() {\n    if (this.senha.hasError('required')) {\n      return 'Você deve informar uma senha';\n    }\n    return null;\n  }\n}\n","<div class=\"container\">\n  <form class=\"form mat-elevation-z8\">\n    <h1>Help Desk</h1>\n    <img src=\"assets/img/login-image.svg\" alt=\"Login Help Desk\">\n    <mat-form-field class=\"full-width\" appearance=\"fill\"> \n      <mat-label>Email</mat-label>\n      <input [(ngModel)]=\"creds.email\" name=\"email\" matInput placeholder=\"nome@email.com\" [formControl]=\"email\" required>\n      <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"full-width\" appearance=\"fill\">\n      <mat-label>Senha</mat-label>\n      <input [(ngModel)]=\"creds.senha\" name=\"senha\" matInput [type]=\"hide ? 'password' : 'text'\" placeholder=\"Ex. 123\" [formControl]=\"senha\" required>\n      <mat-error *ngIf=\"senha.invalid\">{{getErrorMessagePassword()}}</mat-error>\n      <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n        [attr.aria-pressed]=\"hide\">\n        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n      </button>\n    </mat-form-field>\n    <button id=\"btnLogar\" (click)=\"logar()\" [disabled]=\"!validaCampos()\" mat-stroked-button color=\"primary\" class=\"full-width\">Entrar</button>\n  </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}