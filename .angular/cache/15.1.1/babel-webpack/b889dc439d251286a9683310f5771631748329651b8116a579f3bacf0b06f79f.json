{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    let token = localStorage.getItem('token');\n    if (token) {\n      const cloneReq = request.clone({\n        headers: request.headers.set('Authorization', `Bearer ${token}`)\n      });\n      return next.handle(cloneReq);\n    } else {\n      return next.handle(request);\n    }\n  }\n}\nAuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n  return new (t || AuthInterceptor)();\n};\nAuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptor,\n  factory: AuthInterceptor.ɵfac\n});","map":{"version":3,"mappings":";AAUA,OAAM,MAAOA,eAAe;EAE1BC,eAAe;EAEfC,SAAS,CAACC,OAAyB,EAAEC,IAAiB;IAEpD,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAEzC,IAAIF,KAAK,EAAE;MACT,MAAMG,QAAQ,GAAGL,OAAO,CAACM,KAAK,CAAC;QAACC,OAAO,EAAEP,OAAO,CAACO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,UAAUN,KAAK,EAAE;MAAC,CAAC,CAAC;MAClG,OAAOD,IAAI,CAACQ,MAAM,CAACJ,QAAQ,CAAC;KAC7B,MACI;MACH,OAAOJ,IAAI,CAACQ,MAAM,CAACT,OAAO,CAAC;;EAE/B;;;mBAfWH,eAAe;AAAA;;SAAfA,eAAe;EAAAa,SAAfb,eAAe;AAAA","names":["AuthInterceptor","constructor","intercept","request","next","token","localStorage","getItem","cloneReq","clone","headers","set","handle","factory"],"sourceRoot":"","sources":["C:\\Users\\Administrador\\Documents\\JAVA\\helpdesk-front\\helpdesk\\src\\app\\interceptors\\auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    let token = localStorage.getItem('token');\n\n    if (token) {\n      const cloneReq = request.clone({headers: request.headers.set('Authorization', `Bearer ${token}`)});\n      return next.handle(cloneReq);\n    }\n    else {\n      return next.handle(request);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}