{"ast":null,"code":"import { API_CONFIG } from '../config/api.config';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.jwtService = new JwtHelperService();\n  }\n  authenticate(creds) {\n    return this.http.post(`${API_CONFIG.baseUrl}/login`, creds, {\n      observe: 'response',\n      responseType: 'text'\n    });\n  }\n  successfulLogin(authToken) {\n    localStorage.setItem('token', authToken);\n  }\n  isAuthenticated() {\n    let token = localStorage.getItem('token');\n    if (token != null) {\n      return !this.jwtService.isTokenExpired(token);\n    }\n    return false;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,SAASC,gBAAgB,QAAQ,oBAAoB;;;AAKrD,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,eAAU,GAAqB,IAAIH,gBAAgB,EAAE;EAEb;EAExCI,YAAY,CAACC,KAAkB;IAC7B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAGP,UAAU,CAACQ,OAAO,QAAQ,EAAGF,KAAK,EAAE;MAC3DG,OAAO,EAAE,UAAU;MACnBC,YAAY,EAAE;KACf,CAAC;EACJ;EAEAC,eAAe,CAACC,SAAiB;IAC/BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,SAAS,CAAC;EAC1C;EAEAG,eAAe;IACb,IAAIC,KAAK,GAAGH,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC;IACzC,IAAID,KAAK,IAAI,IAAI,EAAE;MACjB,OAAO,CAAC,IAAI,CAACE,UAAU,CAACC,cAAc,CAACH,KAAK,CAAC;;IAE/C,OAAO,KAAK;EACd;;;mBAvBWd,WAAW;AAAA;;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFV;AAAM","names":["API_CONFIG","JwtHelperService","AuthService","constructor","http","authenticate","creds","post","baseUrl","observe","responseType","successfulLogin","authToken","localStorage","setItem","isAuthenticated","token","getItem","jwtService","isTokenExpired","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Administrador\\Documents\\JAVA\\helpdesk-front\\helpdesk\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Credenciais } from '../models/credenciais';\nimport { HttpClient } from '@angular/common/http';\nimport { API_CONFIG } from '../config/api.config';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  jwtService: JwtHelperService = new JwtHelperService();\n\n  constructor(private http: HttpClient) { }\n\n  authenticate(creds: Credenciais) {\n    return this.http.post(`${API_CONFIG.baseUrl}/login` , creds, {\n      observe: 'response',\n      responseType: 'text'\n    });\n  }\n\n  successfulLogin(authToken: string) {\n    localStorage.setItem('token', authToken);\n  }\n\n  isAuthenticated() {\n    let token = localStorage.getItem('token');\n    if (token != null) {\n      return !this.jwtService.isTokenExpired(token);\n    }\n    return false;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}