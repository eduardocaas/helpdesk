{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/tecnico.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/checkbox\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"ngx-mask\";\nfunction TecnicoCreateComponent_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getErrorMessageNome());\n  }\n}\nfunction TecnicoCreateComponent_mat_error_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.getErrorMessageCpf());\n  }\n}\nfunction TecnicoCreateComponent_mat_error_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.getErrorMessageEmail());\n  }\n}\nfunction TecnicoCreateComponent_mat_error_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.getErrorMessagePassword());\n  }\n}\nexport class TecnicoCreateComponent {\n  constructor(service, toast) {\n    this.service = service;\n    this.toast = toast;\n    this.tecnico = {\n      nome: '',\n      cpf: '',\n      email: '',\n      senha: '',\n      perfis: [],\n      dataCriacao: ''\n    };\n    this.nome = new FormControl(null, [Validators.required, Validators.minLength(3), Validators.maxLength(50)]);\n    this.cpf = new FormControl(null, [Validators.required, Validators.minLength(11), Validators.maxLength(11)]);\n    this.email = new FormControl(null, [Validators.required, Validators.email, Validators.maxLength(80)]);\n    this.senha = new FormControl(null, [Validators.required, Validators.minLength(5), Validators.maxLength(50)]);\n  }\n  ngOnInit() {}\n  create() {\n    this.service.create(this.tecnico).subscribe(resposta => {\n      this.toast.success('Técnico criado com sucesso!', 'Cadastro', {\n        timeOut: 6000\n      });\n    }, err => {\n      if (err.error.errors) {\n        err.error.errors.forEach(element => {\n          this.toast.error(element.message, 'Erro', {\n            timeOut: 6000\n          });\n        });\n      } else {\n        this.toast.error(err.error.message, 'Erro', {\n          timeOut: 6000\n        });\n      }\n    });\n  }\n  addPerfil(perfil) {\n    if (this.tecnico.perfis.includes(perfil)) {\n      this.tecnico.perfis.splice(this.tecnico.perfis.indexOf(perfil), 1);\n    } else {\n      this.tecnico.perfis.push(perfil);\n    }\n  }\n  limparCampos() {\n    let checks = document.querySelectorAll('input[type=checkbox]');\n    checks.forEach(check => {\n      check.checked = false;\n    });\n    this.tecnico.nome = '';\n    this.tecnico.cpf = '';\n    this.tecnico.email = '';\n    this.tecnico.senha = '';\n    this.tecnico.perfis = [];\n  }\n  validaCampos() {\n    return this.nome.valid && this.cpf.valid && this.email.valid && this.senha.valid;\n  }\n  getErrorMessageNome() {\n    if (this.nome.hasError('required')) {\n      return 'Você deve informar um nome';\n    }\n    if (this.nome.hasError('maxlength')) {\n      return 'O nome deve ter no máximo 50 caracteres';\n    }\n    if (this.nome.hasError('minlength')) {\n      return 'O nome deve ter no mínimo 3 caracteres';\n    }\n    return null;\n  }\n  getErrorMessageCpf() {\n    if (this.cpf.hasError('required')) {\n      return 'Você deve informar um CPF';\n    }\n    if (this.cpf.hasError('minlength')) {\n      return 'CPF inválido';\n    }\n    if (this.cpf.hasError('maxlength')) {\n      return 'CPF inválido';\n    }\n    return null;\n  }\n  getErrorMessageEmail() {\n    if (this.email.hasError('required')) {\n      return 'Você deve informar um email';\n    }\n    if (this.email.hasError('maxlength')) {\n      return 'O email deve ter no máximo 80 caracteres';\n    }\n    return this.email.hasError('email') ? 'Email inválido' : '';\n  }\n  getErrorMessagePassword() {\n    if (this.senha.hasError('minlength')) {\n      return 'A senha deve ter no mínimo 5 caracteres';\n    }\n    if (this.senha.hasError('maxlength')) {\n      return 'A senha deve ter no máximo 50 caracteres';\n    }\n    if (this.senha.hasError('required')) {\n      return 'Você deve informar uma senha';\n    }\n    return null;\n  }\n}\nTecnicoCreateComponent.ɵfac = function TecnicoCreateComponent_Factory(t) {\n  return new (t || TecnicoCreateComponent)(i0.ɵɵdirectiveInject(i1.TecnicoService), i0.ɵɵdirectiveInject(i2.ToastrService));\n};\nTecnicoCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TecnicoCreateComponent,\n  selectors: [[\"app-tecnico-create\"]],\n  decls: 51,\n  vars: 13,\n  consts: [[\"routerLink\", \"../\", \"mat-stroked-button\", \"\", \"color\", \"primary\", 1, \"btnRet\"], [1, \"container\", \"mat-elevation-z8\"], [\"action\", \"\", 1, \"form\"], [\"src\", \"assets/img/tecnico-create.svg\", \"alt\", \"HelpDesk\", 1, \"fullWidth\"], [1, \"section\"], [\"color\", \"primary\", 1, \"margin\", 3, \"click\"], [\"color\", \"success\", 1, \"margin\", 3, \"click\"], [\"color\", \"accent\", 1, \"margin\", 3, \"click\"], [\"appearance\", \"fill\", 1, \"fullWidth\"], [\"name\", \"nome\", \"required\", \"\", \"matInput\", \"\", \"placeholder\", \"Ex. Fulano\", 3, \"formControl\", \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"matSuffix\", \"\"], [\"name\", \"cpf\", \"required\", \"\", \"matInput\", \"\", \"placeholder\", \"Ex. 000.000.000-00\", \"mask\", \"000.000.000-00\", 3, \"formControl\", \"ngModel\", \"ngModelChange\"], [\"name\", \"email\", \"required\", \"\", \"type\", \"email\", \"matInput\", \"\", \"placeholder\", \"Ex. nome@email.com\", 3, \"formControl\", \"ngModel\", \"ngModelChange\"], [\"name\", \"senha\", \"required\", \"\", \"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Ex. 123\", 3, \"formControl\", \"ngModel\", \"ngModelChange\"], [1, \"btns\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", 1, \"btnForm\", 3, \"disabled\", \"click\"], [\"mat-stroked-button\", \"\", \"color\", \"warn\", 1, \"btnForm\", 3, \"click\"]],\n  template: function TecnicoCreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵtext(1, \"Primary\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2)(4, \"h1\");\n      i0.ɵɵtext(5, \"Cadastrar T\\u00E9cnico\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"img\", 3);\n      i0.ɵɵelementStart(7, \"section\", 4)(8, \"mat-checkbox\", 5);\n      i0.ɵɵlistener(\"click\", function TecnicoCreateComponent_Template_mat_checkbox_click_8_listener() {\n        return ctx.addPerfil(0);\n      });\n      i0.ɵɵtext(9, \"Admin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"mat-checkbox\", 6);\n      i0.ɵɵlistener(\"click\", function TecnicoCreateComponent_Template_mat_checkbox_click_10_listener() {\n        return ctx.addPerfil(1);\n      });\n      i0.ɵɵtext(11, \"Cliente\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"mat-checkbox\", 7);\n      i0.ɵɵlistener(\"click\", function TecnicoCreateComponent_Template_mat_checkbox_click_12_listener() {\n        return ctx.addPerfil(2);\n      });\n      i0.ɵɵtext(13, \"T\\u00E9cnico\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"p\")(15, \"mat-form-field\", 8)(16, \"mat-label\");\n      i0.ɵɵtext(17, \"Nome\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function TecnicoCreateComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.tecnico.nome = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, TecnicoCreateComponent_mat_error_19_Template, 2, 1, \"mat-error\", 10);\n      i0.ɵɵelementStart(20, \"mat-icon\", 11);\n      i0.ɵɵtext(21, \"account_circle\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"p\")(23, \"mat-form-field\", 8)(24, \"mat-label\");\n      i0.ɵɵtext(25, \"CPF\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function TecnicoCreateComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.tecnico.cpf = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(27, TecnicoCreateComponent_mat_error_27_Template, 2, 1, \"mat-error\", 10);\n      i0.ɵɵelementStart(28, \"mat-icon\", 11);\n      i0.ɵɵtext(29, \"pin\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(30, \"p\")(31, \"mat-form-field\", 8)(32, \"mat-label\");\n      i0.ɵɵtext(33, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function TecnicoCreateComponent_Template_input_ngModelChange_34_listener($event) {\n        return ctx.tecnico.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(35, TecnicoCreateComponent_mat_error_35_Template, 2, 1, \"mat-error\", 10);\n      i0.ɵɵelementStart(36, \"mat-icon\", 11);\n      i0.ɵɵtext(37, \"mail\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(38, \"p\")(39, \"mat-form-field\", 8)(40, \"mat-label\");\n      i0.ɵɵtext(41, \"Senha\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function TecnicoCreateComponent_Template_input_ngModelChange_42_listener($event) {\n        return ctx.tecnico.senha = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(43, TecnicoCreateComponent_mat_error_43_Template, 2, 1, \"mat-error\", 10);\n      i0.ɵɵelementStart(44, \"mat-icon\", 11);\n      i0.ɵɵtext(45, \"password\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(46, \"div\", 15)(47, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function TecnicoCreateComponent_Template_button_click_47_listener() {\n        return ctx.create();\n      });\n      i0.ɵɵtext(48, \"Cadastrar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function TecnicoCreateComponent_Template_button_click_49_listener() {\n        return ctx.limparCampos();\n      });\n      i0.ɵɵtext(50, \"Limpar\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"formControl\", ctx.nome)(\"ngModel\", ctx.tecnico.nome);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nome.invalid);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formControl\", ctx.cpf)(\"ngModel\", ctx.tecnico.cpf);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cpf.invalid);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formControl\", ctx.email)(\"ngModel\", ctx.tecnico.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.email.invalid);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formControl\", ctx.senha)(\"ngModel\", ctx.tecnico.senha);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.senha.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.validaCampos());\n    }\n  },\n  dependencies: [i3.NgIf, i4.RouterLink, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgForm, i5.FormControlDirective, i6.MatFormField, i6.MatLabel, i6.MatError, i6.MatSuffix, i7.MatCheckbox, i8.MatButton, i9.MatInput, i10.MatIcon, i11.NgxMaskDirective],\n  styles: [\".container[_ngcontent-%COMP%] {\\r\\n  width: 35rem;\\r\\n  margin: auto;\\r\\n  padding: 1rem 1rem 3rem 1rem;\\r\\n  background-color: rgb(235, 235, 235);\\r\\n  border-radius: .2rem;\\r\\n}\\r\\n\\r\\n.fullWidth[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.section[_ngcontent-%COMP%] {\\r\\n  margin: 1rem 0 1rem 0;\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n}\\r\\n\\r\\n.btns[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\nh1[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nimg[_ngcontent-%COMP%] {\\r\\n  height: 9rem;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.btnForm[_ngcontent-%COMP%] {\\r\\n  margin-right: .3rem;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-icon[_ngcontent-%COMP%] {\\r\\n  opacity: .6;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90ZWNuaWNvL3RlY25pY28tY3JlYXRlL3RlY25pY28tY3JlYXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtFQUNaLDRCQUE0QjtFQUM1QixvQ0FBb0M7RUFDcEMsb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGFBQWE7RUFDYiw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFdBQVc7QUFDYiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gIHdpZHRoOiAzNXJlbTtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgcGFkZGluZzogMXJlbSAxcmVtIDNyZW0gMXJlbTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM1LCAyMzUsIDIzNSk7XHJcbiAgYm9yZGVyLXJhZGl1czogLjJyZW07XHJcbn1cclxuXHJcbi5mdWxsV2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uc2VjdGlvbiB7XHJcbiAgbWFyZ2luOiAxcmVtIDAgMXJlbSAwO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG59XHJcblxyXG4uYnRucyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxufVxyXG5cclxuaDEge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuaW1nIHtcclxuICBoZWlnaHQ6IDlyZW07XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcblxyXG4uYnRuRm9ybSB7XHJcbiAgbWFyZ2luLXJpZ2h0OiAuM3JlbTtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxubWF0LWljb24ge1xyXG4gIG9wYWNpdHk6IC42O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","i0","TecnicoCreateComponent","constructor","service","toast","nome","cpf","email","senha","perfis","dataCriacao","required","minLength","maxLength","ngOnInit","create","tecnico","subscribe","resposta","success","timeOut","err","error","errors","forEach","element","message","addPerfil","perfil","includes","splice","indexOf","push","limparCampos","checks","document","querySelectorAll","check","checked","validaCampos","valid","getErrorMessageNome","hasError","getErrorMessageCpf","getErrorMessageEmail","getErrorMessagePassword","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Administrador\\Documents\\JAVA\\helpdesk-front\\helpdesk\\src\\app\\components\\tecnico\\tecnico-create\\tecnico-create.component.ts","C:\\Users\\Administrador\\Documents\\JAVA\\helpdesk-front\\helpdesk\\src\\app\\components\\tecnico\\tecnico-create\\tecnico-create.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Tecnico } from 'src/app/models/tecnico';\nimport { TecnicoService } from 'src/app/services/tecnico.service';\n\n@Component({\n  selector: 'app-tecnico-create',\n  templateUrl: './tecnico-create.component.html',\n  styleUrls: ['./tecnico-create.component.css']\n})\nexport class TecnicoCreateComponent implements OnInit {\n\n  tecnico: Tecnico = {\n    nome: '',\n    cpf: '',\n    email: '',\n    senha: '',\n    perfis: [],\n    dataCriacao: ''\n  };\n\n  nome: FormControl = new FormControl(null, [Validators.required, Validators.minLength(3), Validators.maxLength(50)]);\n  cpf: FormControl =  new FormControl(null, [Validators.required, Validators.minLength(11), Validators.maxLength(11)]);\n  email: FormControl = new FormControl(null, [Validators.required, Validators.email, Validators.maxLength(80)]);\n  senha: FormControl =  new FormControl(null, [Validators.required, Validators.minLength(5), Validators.maxLength(50)]);\n  \n  constructor(private service: TecnicoService, private toast: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  \n  create(): void {\n    this.service.create(this.tecnico).subscribe(resposta => {\n      this.toast.success('Técnico criado com sucesso!', 'Cadastro', { timeOut: 6000});\n    }, err => {\n      if(err.error.errors) {\n        err.error.errors.forEach(element => {\n          this.toast.error(element.message, 'Erro', { timeOut: 6000});\n        });\n      } else {\n        this.toast.error(err.error.message, 'Erro', { timeOut: 6000});\n      }     \n    });\n  }\n\n  addPerfil(perfil: any): void {\n    if (this.tecnico.perfis.includes(perfil)) {\n      this.tecnico.perfis.splice(this.tecnico.perfis.indexOf(perfil), 1);\n    } else {\n      this.tecnico.perfis.push(perfil);\n    } \n  }\n\n  limparCampos(): void {\n    let checks = document.querySelectorAll('input[type=checkbox]') as HTMLInputElement[] | any;\n    checks.forEach(check => {\n      check.checked = false;\n    });\n    this.tecnico.nome = '';\n    this.tecnico.cpf = '';\n    this.tecnico.email = '';\n    this.tecnico.senha = '';\n    this.tecnico.perfis = [];\n\n  }\n\n  validaCampos(): boolean {\n    return this.nome.valid && this.cpf.valid && this.email.valid && this.senha.valid;\n  }\n  \n  getErrorMessageNome(){\n    if (this.nome.hasError('required')) {\n      return 'Você deve informar um nome';\n    }\n    if (this.nome.hasError('maxlength')) {\n      return 'O nome deve ter no máximo 50 caracteres';\n    }\n    if (this.nome.hasError('minlength')) {\n      return 'O nome deve ter no mínimo 3 caracteres';\n    }\n    return null;\n  }\n\n  getErrorMessageCpf(){\n    if (this.cpf.hasError('required')) {\n      return 'Você deve informar um CPF';\n    }\n    if (this.cpf.hasError('minlength')) {\n      return 'CPF inválido';\n    }\n    if (this.cpf.hasError('maxlength')) {\n      return 'CPF inválido';\n    }\n    return null;\n  }\n\n  getErrorMessageEmail(){\n    if (this.email.hasError('required')) {\n      return 'Você deve informar um email';\n    }\n    if (this.email.hasError('maxlength')) {\n      return 'O email deve ter no máximo 80 caracteres';\n    }\n\n    return this.email.hasError('email') ? 'Email inválido' : '';\n  }\n\n  getErrorMessagePassword() {\n    if (this.senha.hasError('minlength')) {\n      return 'A senha deve ter no mínimo 5 caracteres';\n    }\n    if (this.senha.hasError('maxlength')) {\n      return 'A senha deve ter no máximo 50 caracteres';\n    }\n    if (this.senha.hasError('required')) {\n      return 'Você deve informar uma senha';\n    }\n\n    return null;\n  }\n\n}\n\n\n\n","<button routerLink=\"../\" class=\"btnRet\" mat-stroked-button color=\"primary\">Primary</button>\n<div class=\"container mat-elevation-z8\">\n  <form action=\"\" class=\"form\">\n    <h1>Cadastrar Técnico</h1>\n    <img class=\"fullWidth\" src=\"assets/img/tecnico-create.svg\" alt=\"HelpDesk\">\n\n    <section class=\"section\">\n      <mat-checkbox (click)=\"addPerfil(0)\" color=\"primary\" class=\"margin\">Admin</mat-checkbox>\n      <mat-checkbox (click)=\"addPerfil(1)\" color=\"success\" class=\"margin\">Cliente</mat-checkbox>\n      <mat-checkbox (click)=\"addPerfil(2)\" color=\"accent\" class=\"margin\">Técnico</mat-checkbox>\n    </section>\n\n    <p>\n      <mat-form-field class=\"fullWidth\" appearance=\"fill\">\n        <mat-label>Nome</mat-label>\n        <input \n        [formControl]=\"nome\" \n        [(ngModel)]=\"tecnico.nome\"\n        name=\"nome\"\n        required \n        matInput \n        placeholder=\"Ex. Fulano\">\n        <mat-error *ngIf=\"nome.invalid\">{{getErrorMessageNome()}}</mat-error>\n        <mat-icon matSuffix>account_circle</mat-icon>\n      </mat-form-field>\n    </p>\n\n    <p>\n      <mat-form-field class=\"fullWidth\" appearance=\"fill\">\n        <mat-label>CPF</mat-label>\n        <input \n        [formControl]=\"cpf\"\n        [(ngModel)]=\"tecnico.cpf\"\n        name=\"cpf\" \n        required \n        matInput \n        placeholder=\"Ex. 000.000.000-00\" \n        mask=\"000.000.000-00\">\n        <mat-error *ngIf=\"cpf.invalid\">{{getErrorMessageCpf()}}</mat-error>\n        <mat-icon matSuffix>pin</mat-icon>\n      </mat-form-field>\n    </p>\n\n    <p>\n      <mat-form-field class=\"fullWidth\" appearance=\"fill\">\n        <mat-label>Email</mat-label>\n        <input \n        [formControl]=\"email\"\n        [(ngModel)]=\"tecnico.email\"\n        name=\"email\" \n        required \n        type=\"email\" \n        matInput \n        placeholder=\"Ex. nome@email.com\">\n        <mat-error *ngIf=\"email.invalid\">{{getErrorMessageEmail()}}</mat-error>\n        <mat-icon matSuffix>mail</mat-icon>\n      </mat-form-field>\n    </p>\n\n    <p>\n      <mat-form-field class=\"fullWidth\" appearance=\"fill\">\n        <mat-label>Senha</mat-label>\n        <input \n        [formControl]=\"senha\" \n        [(ngModel)]=\"tecnico.senha\"\n        name=\"senha\"\n        required \n        type=\"password\" \n        matInput \n        placeholder=\"Ex. 123\">\n        <mat-error *ngIf=\"senha.invalid\">{{getErrorMessagePassword()}}</mat-error>\n        <mat-icon matSuffix>password</mat-icon>\n      </mat-form-field>\n    </p>\n\n    <div class=\"btns\">\n      <button (click)=\"create()\" [disabled]=\"!validaCampos()\" class=\"btnForm\" mat-stroked-button color=\"primary\">Cadastrar</button>\n      <button (click)=\"limparCampos()\" mat-stroked-button class=\"btnForm\" color=\"warn\">Limpar</button>\n    </div>\n\n  </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}