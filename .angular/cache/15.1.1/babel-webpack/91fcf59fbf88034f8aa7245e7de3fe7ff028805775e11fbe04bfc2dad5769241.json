{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/tecnico.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/checkbox\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"ngx-mask\";\nfunction TecnicoCreateComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getErrorMessageNome());\n  }\n}\nfunction TecnicoCreateComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.getErrorMessageCpf());\n  }\n}\nfunction TecnicoCreateComponent_mat_error_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.getErrorMessageEmail());\n  }\n}\nfunction TecnicoCreateComponent_mat_error_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.getErrorMessagePassword());\n  }\n}\nexport class TecnicoCreateComponent {\n  constructor(service, toast) {\n    this.service = service;\n    this.toast = toast;\n    this.tecnico = {\n      nome: '',\n      cpf: '',\n      email: '',\n      senha: '',\n      perfis: [],\n      dataCriacao: ''\n    };\n    this.nome = new FormControl(null, [Validators.required, Validators.minLength(5), Validators.maxLength(50)]);\n    this.cpf = new FormControl(null, [Validators.required, Validators.minLength(11), Validators.maxLength(11)]);\n    this.email = new FormControl(null, [Validators.required, Validators.email, Validators.maxLength(80)]);\n    this.senha = new FormControl(null, [Validators.required, Validators.minLength(5), Validators.maxLength(50)]);\n  }\n  ngOnInit() {}\n  create() {\n    this.service.create(this.tecnico).subscribe(resposta => {\n      this.toast.success('Técnico criado com sucesso!', 'Cadastro', {\n        timeOut: 4000\n      });\n    }, err => {\n      this.toast.error('Erro ao criar técnico!', 'Cadastro', {\n        timeOut: 4000\n      });\n      console.log(err);\n    });\n  }\n  addPerfil(perfil) {\n    if (this.tecnico.perfis.includes(perfil)) {\n      this.tecnico.perfis.splice(this.tecnico.perfis.indexOf(perfil), 1);\n    } else {\n      this.tecnico.perfis.push(perfil);\n    }\n  }\n  validaCampos() {\n    return this.nome.valid && this.cpf.valid && this.email.valid && this.senha.valid;\n  }\n  getErrorMessageNome() {\n    if (this.nome.hasError('required')) {\n      return 'Você deve informar um nome';\n    }\n    if (this.nome.hasError('maxlength')) {\n      return 'O nome deve ter no máximo 50 caracteres';\n    }\n    if (this.nome.hasError('minlength')) {\n      return 'O nome deve ter no mínimo 5 caracteres';\n    }\n    return null;\n  }\n  getErrorMessageCpf() {\n    if (this.cpf.hasError('required')) {\n      return 'Você deve informar um CPF';\n    }\n    if (this.cpf.hasError('minlength')) {\n      return 'CPF inválido';\n    }\n    if (this.cpf.hasError('maxlength')) {\n      return 'CPF inválido';\n    }\n    return null;\n  }\n  getErrorMessageEmail() {\n    if (this.email.hasError('required')) {\n      return 'Você deve informar um email';\n    }\n    if (this.email.hasError('maxlength')) {\n      return 'O email deve ter no máximo 80 caracteres';\n    }\n    return this.email.hasError('email') ? 'Email inválido' : '';\n  }\n  getErrorMessagePassword() {\n    if (this.senha.hasError('minlength')) {\n      return 'A senha deve ter no mínimo 5 caracteres';\n    }\n    if (this.senha.hasError('maxlength')) {\n      return 'A senha deve ter no máximo 50 caracteres';\n    }\n    if (this.senha.hasError('required')) {\n      return 'Você deve informar uma senha';\n    }\n    return null;\n  }\n}\nTecnicoCreateComponent.ɵfac = function TecnicoCreateComponent_Factory(t) {\n  return new (t || TecnicoCreateComponent)(i0.ɵɵdirectiveInject(i1.TecnicoService), i0.ɵɵdirectiveInject(i2.ToastrService));\n};\nTecnicoCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TecnicoCreateComponent,\n  selectors: [[\"app-tecnico-create\"]],\n  decls: 49,\n  vars: 13,\n  consts: [[1, \"container\", \"mat-elevation-z8\"], [\"action\", \"\", 1, \"form\"], [\"src\", \"assets/img/tecnico-create.svg\", \"alt\", \"HelpDesk\", 1, \"fullWidth\"], [1, \"section\"], [\"color\", \"primary\", 1, \"margin\"], [\"color\", \"success\", 1, \"margin\"], [\"color\", \"accent\", 1, \"margin\"], [\"appearance\", \"fill\", 1, \"fullWidth\"], [\"name\", \"nome\", \"required\", \"\", \"matInput\", \"\", \"placeholder\", \"Ex. Fulano\", 3, \"formControl\", \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"matSuffix\", \"\"], [\"name\", \"cpf\", \"required\", \"\", \"matInput\", \"\", \"placeholder\", \"Ex. 000.000.000-00\", \"mask\", \"000.000.000-00\", 3, \"formControl\", \"ngModel\", \"ngModelChange\"], [\"name\", \"email\", \"required\", \"\", \"type\", \"email\", \"matInput\", \"\", \"placeholder\", \"Ex. nome@email.com\", 3, \"formControl\", \"ngModel\", \"ngModelChange\"], [\"name\", \"senha\", \"required\", \"\", \"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Ex. 123\", 3, \"formControl\", \"ngModel\", \"ngModelChange\"], [1, \"btns\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", 3, \"disabled\"], [\"routerLink\", \"../\", \"mat-stroked-button\", \"\", \"color\", \"warn\"]],\n  template: function TecnicoCreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"h1\");\n      i0.ɵɵtext(3, \"Cadastrar T\\u00E9cnico\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"img\", 2);\n      i0.ɵɵelementStart(5, \"section\", 3)(6, \"mat-checkbox\", 4);\n      i0.ɵɵtext(7, \"Admin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-checkbox\", 5);\n      i0.ɵɵtext(9, \"Cliente\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"mat-checkbox\", 6);\n      i0.ɵɵtext(11, \"T\\u00E9cnico\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"p\")(13, \"mat-form-field\", 7)(14, \"mat-label\");\n      i0.ɵɵtext(15, \"Nome\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function TecnicoCreateComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.tecnico.nome = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, TecnicoCreateComponent_mat_error_17_Template, 2, 1, \"mat-error\", 9);\n      i0.ɵɵelementStart(18, \"mat-icon\", 10);\n      i0.ɵɵtext(19, \"account_circle\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"p\")(21, \"mat-form-field\", 7)(22, \"mat-label\");\n      i0.ɵɵtext(23, \"CPF\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function TecnicoCreateComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.tecnico.cpf = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(25, TecnicoCreateComponent_mat_error_25_Template, 2, 1, \"mat-error\", 9);\n      i0.ɵɵelementStart(26, \"mat-icon\", 10);\n      i0.ɵɵtext(27, \"pin\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(28, \"p\")(29, \"mat-form-field\", 7)(30, \"mat-label\");\n      i0.ɵɵtext(31, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function TecnicoCreateComponent_Template_input_ngModelChange_32_listener($event) {\n        return ctx.tecnico.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(33, TecnicoCreateComponent_mat_error_33_Template, 2, 1, \"mat-error\", 9);\n      i0.ɵɵelementStart(34, \"mat-icon\", 10);\n      i0.ɵɵtext(35, \"mail\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(36, \"p\")(37, \"mat-form-field\", 7)(38, \"mat-label\");\n      i0.ɵɵtext(39, \"Senha\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function TecnicoCreateComponent_Template_input_ngModelChange_40_listener($event) {\n        return ctx.tecnico.senha = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(41, TecnicoCreateComponent_mat_error_41_Template, 2, 1, \"mat-error\", 9);\n      i0.ɵɵelementStart(42, \"mat-icon\", 10);\n      i0.ɵɵtext(43, \"password\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(44, \"div\", 14)(45, \"button\", 15);\n      i0.ɵɵtext(46, \"Cadastrar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"button\", 16);\n      i0.ɵɵtext(48, \"Retornar\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"formControl\", ctx.nome)(\"ngModel\", ctx.tecnico.nome);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nome.invalid);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formControl\", ctx.cpf)(\"ngModel\", ctx.tecnico.cpf);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cpf.invalid);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formControl\", ctx.email)(\"ngModel\", ctx.tecnico.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.email.invalid);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formControl\", ctx.senha)(\"ngModel\", ctx.tecnico.senha);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.senha.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.validaCampos());\n    }\n  },\n  dependencies: [i3.NgIf, i4.RouterLink, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgForm, i5.FormControlDirective, i6.MatFormField, i6.MatLabel, i6.MatError, i6.MatSuffix, i7.MatCheckbox, i8.MatButton, i9.MatInput, i10.MatIcon, i11.NgxMaskDirective],\n  styles: [\".container[_ngcontent-%COMP%] {\\r\\n  width: 35rem;\\r\\n  margin: auto;\\r\\n  padding: 1rem 1rem 3rem 1rem;\\r\\n  background-color: rgb(235, 235, 235);\\r\\n  border-radius: .2rem;\\r\\n}\\r\\n\\r\\n.fullWidth[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.section[_ngcontent-%COMP%] {\\r\\n  margin: 1rem 0 1rem 0;\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n}\\r\\n\\r\\n.btns[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\nh1[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nimg[_ngcontent-%COMP%] {\\r\\n  height: 9rem;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  margin-right: .3rem;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-icon[_ngcontent-%COMP%] {\\r\\n  opacity: .6;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90ZWNuaWNvL3RlY25pY28tY3JlYXRlL3RlY25pY28tY3JlYXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtFQUNaLDRCQUE0QjtFQUM1QixvQ0FBb0M7RUFDcEMsb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGFBQWE7RUFDYiw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFdBQVc7QUFDYiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gIHdpZHRoOiAzNXJlbTtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgcGFkZGluZzogMXJlbSAxcmVtIDNyZW0gMXJlbTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM1LCAyMzUsIDIzNSk7XHJcbiAgYm9yZGVyLXJhZGl1czogLjJyZW07XHJcbn1cclxuXHJcbi5mdWxsV2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uc2VjdGlvbiB7XHJcbiAgbWFyZ2luOiAxcmVtIDAgMXJlbSAwO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG59XHJcblxyXG4uYnRucyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxufVxyXG5cclxuaDEge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuaW1nIHtcclxuICBoZWlnaHQ6IDlyZW07XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gIG1hcmdpbi1yaWdodDogLjNyZW07XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbm1hdC1pY29uIHtcclxuICBvcGFjaXR5OiAuNjtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","i0","TecnicoCreateComponent","constructor","service","toast","nome","cpf","email","senha","perfis","dataCriacao","required","minLength","maxLength","ngOnInit","create","tecnico","subscribe","resposta","success","timeOut","err","error","console","log","addPerfil","perfil","includes","splice","indexOf","push","validaCampos","valid","getErrorMessageNome","hasError","getErrorMessageCpf","getErrorMessageEmail","getErrorMessagePassword","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Administrador\\Documents\\JAVA\\helpdesk-front\\helpdesk\\src\\app\\components\\tecnico\\tecnico-create\\tecnico-create.component.ts","C:\\Users\\Administrador\\Documents\\JAVA\\helpdesk-front\\helpdesk\\src\\app\\components\\tecnico\\tecnico-create\\tecnico-create.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Tecnico } from 'src/app/models/tecnico';\nimport { TecnicoService } from 'src/app/services/tecnico.service';\n\n@Component({\n  selector: 'app-tecnico-create',\n  templateUrl: './tecnico-create.component.html',\n  styleUrls: ['./tecnico-create.component.css']\n})\nexport class TecnicoCreateComponent implements OnInit {\n\n  tecnico: Tecnico = {\n    nome: '',\n    cpf: '',\n    email: '',\n    senha: '',\n    perfis: [],\n    dataCriacao: ''\n  };\n\n  nome: FormControl = new FormControl(null, [Validators.required, Validators.minLength(5), Validators.maxLength(50)]);\n  cpf: FormControl =  new FormControl(null, [Validators.required, Validators.minLength(11), Validators.maxLength(11)]);\n  email: FormControl = new FormControl(null, [Validators.required, Validators.email, Validators.maxLength(80)]);\n  senha: FormControl =  new FormControl(null, [Validators.required, Validators.minLength(5), Validators.maxLength(50)]);\n  \n  constructor(private service: TecnicoService, private toast: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  \n  create(): void {\n    this.service.create(this.tecnico).subscribe(resposta => {\n      this.toast.success('Técnico criado com sucesso!', 'Cadastro', { timeOut: 4000});\n    }, err => {\n      this.toast.error('Erro ao criar técnico!', 'Cadastro', { timeOut: 4000});\n      console.log(err);\n    });\n  }\n\n  addPerfil(perfil: any): void {\n    if (this.tecnico.perfis.includes(perfil)) {\n      this.tecnico.perfis.splice(this.tecnico.perfis.indexOf(perfil), 1);\n    } else {\n      this.tecnico.perfis.push(perfil);\n    }\n  }\n\n  validaCampos(): boolean {\n    return this.nome.valid && this.cpf.valid && this.email.valid && this.senha.valid;\n  }\n  \n  getErrorMessageNome(){\n    if (this.nome.hasError('required')) {\n      return 'Você deve informar um nome';\n    }\n    if (this.nome.hasError('maxlength')) {\n      return 'O nome deve ter no máximo 50 caracteres';\n    }\n    if (this.nome.hasError('minlength')) {\n      return 'O nome deve ter no mínimo 5 caracteres';\n    }\n    return null;\n  }\n\n  getErrorMessageCpf(){\n    if (this.cpf.hasError('required')) {\n      return 'Você deve informar um CPF';\n    }\n    if (this.cpf.hasError('minlength')) {\n      return 'CPF inválido';\n    }\n    if (this.cpf.hasError('maxlength')) {\n      return 'CPF inválido';\n    }\n    return null;\n  }\n\n  getErrorMessageEmail(){\n    if (this.email.hasError('required')) {\n      return 'Você deve informar um email';\n    }\n    if (this.email.hasError('maxlength')) {\n      return 'O email deve ter no máximo 80 caracteres';\n    }\n\n    return this.email.hasError('email') ? 'Email inválido' : '';\n  }\n\n  getErrorMessagePassword() {\n    if (this.senha.hasError('minlength')) {\n      return 'A senha deve ter no mínimo 5 caracteres';\n    }\n    if (this.senha.hasError('maxlength')) {\n      return 'A senha deve ter no máximo 50 caracteres';\n    }\n    if (this.senha.hasError('required')) {\n      return 'Você deve informar uma senha';\n    }\n\n    return null;\n  }\n\n}\n\n\n\n","<div class=\"container mat-elevation-z8\">\n  <form action=\"\" class=\"form\">\n    <h1>Cadastrar Técnico</h1>\n    <img class=\"fullWidth\" src=\"assets/img/tecnico-create.svg\" alt=\"HelpDesk\">\n\n    <section class=\"section\">\n      <mat-checkbox color=\"primary\" class=\"margin\">Admin</mat-checkbox>\n      <mat-checkbox color=\"success\" class=\"margin\">Cliente</mat-checkbox>\n      <mat-checkbox color=\"accent\" class=\"margin\">Técnico</mat-checkbox>\n    </section>\n\n    <p>\n      <mat-form-field class=\"fullWidth\" appearance=\"fill\">\n        <mat-label>Nome</mat-label>\n        <input \n        [formControl]=\"nome\" \n        [(ngModel)]=\"tecnico.nome\"\n        name=\"nome\"\n        required \n        matInput \n        placeholder=\"Ex. Fulano\">\n        <mat-error *ngIf=\"nome.invalid\">{{getErrorMessageNome()}}</mat-error>\n        <mat-icon matSuffix>account_circle</mat-icon>\n      </mat-form-field>\n    </p>\n\n    <p>\n      <mat-form-field class=\"fullWidth\" appearance=\"fill\">\n        <mat-label>CPF</mat-label>\n        <input \n        [formControl]=\"cpf\"\n        [(ngModel)]=\"tecnico.cpf\"\n        name=\"cpf\" \n        required \n        matInput \n        placeholder=\"Ex. 000.000.000-00\" \n        mask=\"000.000.000-00\">\n        <mat-error *ngIf=\"cpf.invalid\">{{getErrorMessageCpf()}}</mat-error>\n        <mat-icon matSuffix>pin</mat-icon>\n      </mat-form-field>\n    </p>\n\n    <p>\n      <mat-form-field class=\"fullWidth\" appearance=\"fill\">\n        <mat-label>Email</mat-label>\n        <input \n        [formControl]=\"email\"\n        [(ngModel)]=\"tecnico.email\"\n        name=\"email\" \n        required \n        type=\"email\" \n        matInput \n        placeholder=\"Ex. nome@email.com\">\n        <mat-error *ngIf=\"email.invalid\">{{getErrorMessageEmail()}}</mat-error>\n        <mat-icon matSuffix>mail</mat-icon>\n      </mat-form-field>\n    </p>\n\n    <p>\n      <mat-form-field class=\"fullWidth\" appearance=\"fill\">\n        <mat-label>Senha</mat-label>\n        <input \n        [formControl]=\"senha\" \n        [(ngModel)]=\"tecnico.senha\"\n        name=\"senha\"\n        required \n        type=\"password\" \n        matInput \n        placeholder=\"Ex. 123\">\n        <mat-error *ngIf=\"senha.invalid\">{{getErrorMessagePassword()}}</mat-error>\n        <mat-icon matSuffix>password</mat-icon>\n      </mat-form-field>\n    </p>\n\n    <div class=\"btns\">\n      <button [disabled]=\"!validaCampos()\" mat-stroked-button color=\"primary\">Cadastrar</button>\n      <button routerLink=\"../\" mat-stroked-button color=\"warn\">Retornar</button>\n    </div>\n\n  </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}